#!/bin/bash
# vim:set nolist noet tw=0 ts=4 sw=4 sts=4:

export PATH="$PATH:$HOME/bin"

# Fixes some Java applications that use AWT
export AWT_TOOLKIT=MToolkit

# Status bar colours
export NORMBGCOLOR='#2e3436'
export NORMFGCOLOR='#f5a400'

# Width of your screen in pixels, so we can work out how wide to make the status bars
export WIDTH="$(xdpyinfo | grep 'dimensions:' | awk '{ print $2;}' | cut -f1 -d'x')"
export WIDTH=$((WIDTH - 50))

# Width of the right-hand bar
export RBARWIDTH=900

# Load my keyboard hacks
if [ -r ~/.xmodmaprc ]; then
	xmodmap ~/.xmodmaprc
fi

export LC_CTYPE=en_AU.UTF-8
xscreensaver -no-splash &

if which fbpanel &>/dev/null; then
	fbpanel &
fi

#         | low_power |  standby   |    off     |
xset dpms $((05 * 60)) $((20 * 60)) $((20 * 60))

# Run the status bar, with battery/wifi/time/whatever information you have
###if [ -e "${HOME}/.fonts/Monaco.ttf" ]; then
###	$HOME/bin/.installs/xmonad_bar/bar.py -x $RBARWIDTH -w $(($WIDTH - $RBARWIDTH)) --font-name 'Monaco:size=8:bold' &
###else
###	$HOME/bin/.installs/xmonad_bar/bar.py -x $RBARWIDTH -w $(($WIDTH - $RBARWIDTH)) &
###fi

if echo "$STARTUP" | egrep "gnome-session$" || [ -z "$STARTUP" ]; then
###	xterm &
	return
fi

# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# -= We should not get below this line... In theory anyway.                  =-
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

nm-applet &

/usr/lib/gvfs/gvfs-hal-volume-monitor &

# Make GTK apps look and behave how they were set up in the gnome config tools
gnome-settings-daemon
# Make GTK apps look and behave how they were set up in the XFCE config tools
###	xfce-mcs-manager n


# Wake gnome-settings-daemon up
dbus-send --session --dest=org.gnome.SettingsDaemon \
  --type=method_call --print-reply --reply-timeout=5000 \
  /org/gnome/SettingsDaemon \
  org.gnome.SettingsDaemon.Awake

( sleep 6 && dbus-send --session --dest=org.gnome.SettingsDaemon --type=method_call --print-reply --reply-timeout=5000 /org/gnome/SettingsDaemon org.gnome.SettingsDaemon.Awake ) &

# Lets try enabling pulse audio
if [ -x /usr/bin/pulse-session ]; then
	STARTUP="/usr/bin/pulse-session $STARTUP"
fi

if [ -x /usr/bin/seahorse-agent ]; then
###	STARTUP="/usr/bin/seahorse-agent $STARTUP"
	eval `/usr/bin/seahorse-agent`
fi

if which gnome-keyring-daemon; then
	eval `gnome-keyring-daemon`
fi
