#!/bin/bash
# vim:set ft=sh nolist ts=2 sw=2 sts=2 noet tw=0:
# Copyright 2009 Greg Darke <greg@it.usyd.edu.au>
# Licensed for distribution under the GPL version 2, check COPYING for details
# Shell script to post a file (via ssh) to my server, then return the url

SSH_SERVER="${SSH_SERVER:-gregdarke@rin.tsukasa.net.au}"
HTTP_SERVER="${HTTP_SERVER:-http://rin.tsukasa.net.au/~gregdarke/files}"
UPLOAD_PATH="${UPLOAD_PATH:-public_html/files}"

unset MYTEMP SSH_MASTERFILE
if [ "${1}" == "-f" ]; then
	shift
	FORCE_UPLOAD=true
else
	FORCE_UPLOAD=false
fi

# Cleanup our tempdir when we are finished
function cleanup {
	# Only try to kill the ssh server if we have actually created a master file
	if [ -n "${SSH_MASTERFILE}" ]; then
		ssh \
			-o ControlMaster=no -o ControlPath="${SSH_MASTERFILE}" \
			-O exit \
			"${SSH_SERVER}" &>/dev/null
	fi

	# Kill the tempdir
	if [ -n "$MYTEMP" ]; then
		rm -rf "$MYTEMP"
	fi
}

function escapeFilename {
  # This function replaces single quotes with an escaped single quote.
  # For example:
  #    escapeFilename "a'b"
  # -> 'a'"'"'b'
	echo -n "'${1//'/'\"'\"'}'"
}

trap "cleanup" 15 0
MYTEMP="$(mktemp -d -t XXXXXXX)"
FILENAME="${2:-"$(basename "${1}")"}"
INPUT_FILE="${1}"

if [ "${INPUT_FILE}" = "-" ]; then
	INPUT_FILE="/dev/stdin"
fi

if [ -h "${INPUT_FILE}" -o -c "${INPUT_FILE}" -o -p "${INPUT_FILE}" ]; then
	cat "${INPUT_FILE}" > "${MYTEMP}/input_file"
	INPUT_FILE="${MYTEMP}/input_file"
fi

if ! [ -e "${INPUT_FILE}" ]; then
	echo "The specified file '${INPUT_FILE}' does not exist!" >&2
	exit 1
fi

SSH_MASTERFILE="${MYTEMP}/control_socket"

# Open up our master ssh connection
ssh \
	-o ControlMaster=yes -o ControlPath="${SSH_MASTERFILE}" \
	-fN \
	"${SSH_SERVER}"

# Ensure the directory exists
ssh \
	-o ControlMaster=no -o ControlPath="${SSH_MASTERFILE}" \
	"${SSH_SERVER}" -- \
	"umask 0022; mkdir -p ${UPLOAD_PATH}" \
	|| exit 1

# Check if the file already exists
if [ $FORCE_UPLOAD != true ] && ssh \
	-o ControlMaster=no -o ControlPath="${SSH_MASTERFILE}" \
	"${SSH_SERVER}" -- \
	"[ -e ${UPLOAD_PATH}/$(escapeFilename "${FILENAME}") ]"
then
	echo "The file '${FILENAME}' already exists, specify '-f' if you want to overwrite it" >&2
	exit 2
fi

# Copy the file across
scp \
	-o ControlMaster=no -o ControlPath="${SSH_MASTERFILE}" \
	"${INPUT_FILE}" "${SSH_SERVER}:${UPLOAD_PATH}/$(escapeFilename "${FILENAME}")" \
	|| exit 1

# Ensure the permissions are sane (rw-r--r--)
ssh \
	-o ControlMaster=no -o ControlPath="${SSH_MASTERFILE}" \
	"${SSH_SERVER}" -- \
	"umask 0022; cd ${UPLOAD_PATH} && chmod 644 $(escapeFilename "${FILENAME}")" \
	|| exit 1

REMOTE_URL="${HTTP_SERVER// /%20}/${FILENAME// /%20}"
if [ -n "`which pbcopy 2>/dev/null`" ]; then
	echo -n "${REMOTE_URL}" | pbcopy
elif [ -n "`which xclip 2>/dev/null`" ]; then
	echo -n "${REMOTE_URL}" | xclip -i
else
	echo "Could not find either pbcopy or xclip, please install one of them"
fi

echo "File is now available from '${REMOTE_URL}'"
