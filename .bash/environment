#! bash

# This file sets up the environment correctly. It gets run for every shell,
# so it must be fast. Also, starting a shell within a shell shouldn't change
# the environment. The path manipulation functions are useful for this.

# Files will be created by default rwx user only
umask 0077

# General environment settings
export PAGER="less"
export EDITOR="vim"
export CVS_RSH="ssh"
export RSYNC_RSH="ssh"
export PYTHONSTARTUP="${HOME}/.pythonrc.py"
export HISTCONTROL="ignoredups"
export HISTSIZE="10000"
export HISTFILESIZE="10000"

# Expand any symbolic links in the TMPDIR environment variable
export TMPDIR="$(cd "${TMPDIR}" && pwd -P)"

# Load the bash functions
source "${HOME}/.bash/functions"

# The current directory shouldn't be in the path
pathremove .

# I am an admin kinda person... thus I like having access to sbin
pathappend "/sbin"
pathappend "/usr/sbin"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
       debian_chroot=$(cat /etc/debian_chroot)
fi

# ~/bin should be in the front of path if it exists
pathprepend "${HOME}/bin"

# Load local environment settings
ssource "${HOME}/.bash/environment_local"

# Really ensure that ~/bin is at the front of the path (if it exists)
pathprepend "${HOME}/bin"
